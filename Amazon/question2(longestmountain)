class Solution {
public:
    int longestMountain(vector<int>& arr)
    {
        //time complexcity is bego(n)
        //space complexcity will be bego(n)
        int n=arr.size();
        if(n<3)
            return 0;
        vector<int>left(n,1);
        vector<int>right(n,1);
        
        for(int i=n-2;i>=0;i--)
        {
            if(arr[i]>arr[i+1])
                right[i]=1+right[i+1];
        }
        int longestlength=0;
        for(int i=1;i<=n-2;i++)
        {
            if(arr[i-1]<arr[i])
                left[i]=1+left[i-1];
            if(left[i]!=1&&right[i]!=1)
            longestlength=max(longestlength,left[i]+right[i]-1);
        }
        
      
            
            return longestlength;
        
        
        
    }
};